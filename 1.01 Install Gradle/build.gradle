/* 
* -----------------------------------------------------------------
* Install gradle
* -----------------------------------------------------------------


Whenever we're working with an existing Gradle project, we'll be using the
wrapper, because that way we can ensure that everyone working on the project
is using the same version of Gradle.

If you want to create a new Gradle project, however, you'll need a local
installation of Gradle. First make sure you have an installation of by running

    $ java -version

The output should be something like:

    java version "1.8.0_112"
    Java(TM) SE Runtime Environment (build 1.8.0_112-b16)
    Java HotSpot(TM) 64-Bit Server VM (build 25.112-b16, mixed mode)

If not, skip below to find Java installation instructions.

There are a bunch of ways to install Gradle. If you're on Mac and use Homebrew
(and if you don't you really should), you can install Gradle with

    $ brew install gradle

Another option for Mac and Linux users is to head over to http://sdkman.io/
and install the Software Development Kit Manager, and use that to install
Gradle. If neither of those options appeals to you, we'll go through the manual
installation process for both Windows and Mac.

To install Gradle manually, we need to do three things. First we need to
download Gradle. Next we need to put it where we want it on our machine. And
finally we need to let the system know where to find it. We'll do the Mac
instructions first. Skip below for the Windows instructions.

Side note: Gradle relies on Groovy, but brings along its own distribution, so no
need to install Groovy.

******************* Mac/Linux Instructions *************

First, head over to https://gradle.org/gradle-download/, and download the latest
version of Gradle. Note that we want the complete distribution. Next, we'll
unzip Gradle and move it to where we want it to live. Our recommendation is in
`/usr/local/gradle`. Then we need to add some lines to our .bash_profile file
(generally found in your home directory) to tell the system where to find our
new installation of Gradle. You can do all these steps manually, but the
easiest way is to paste the whole big block of instructions below into your
terminal. Note that you may need to change the version number on the first and
third lines. Note that you may need to run the following command
with `sudo` out in front.

unzip ~/Downloads/gradle-3.3-all.zip -d /usr/local/gradle/ &&\
echo '# Adding Gradle to system path
export GRADLE_HOME=/usr/local/gradle/gradle-3.3
PATH=$GRADLE_HOME/bin:$PATH
export PATH' >> ~/.bash_profile &&\
source ~/.bash_profile

******************* Windows Instructions *******************

First, head over to https://gradle.org/gradle-download/, and download the latest
version of Gradle. Note that we want the complete distribution. Next, we'll
unzip Gradle and move it to where we want it to live. Our recommendation is in
`C:\gradle-3.3`.

To tell Windows where to find Gradle, we need to add an environment variable.
Navigate to the Control Panel > System > Advanced system settings > Advanced >
Environment Variables... > System variables > New...

Set the variable name to: GRADLE_HOME Set the variable value to the location
you unzipped Gradle if you followed our suggestion it should be: C:\gradle-3.3

Then edit the PATH user variable by appending: ;%GRADLE_HOME%\bin\

Your path will then look something like:

    <a bunch of directories>;%GRADLE_HOME%\bin\

When you're done, run `gradle --version` to ensure the installation is
complete.

******************* When you're done *******************

Once you've installed Gradle, you no longer need to use the wrapper script,
and you can simply use the `gradle` command. To see if Gradle was installed
successfully, try running

    $ gradle --version

To see the effect of the Gradle daemon, first run

    $ gradle --stop

to ensure the daemon is stopped, then run the `helloWorld` task using

    $ gradle helloWorld

and note how long it takes. Then run the `helloWorld` task again and see how
much faster the second run is.

*/

task helloWorld {
    doLast{
        println "Hello, World!"        
    }
}

/*

************ Java Installation Instructions **********

These instructions will explain how to get the Java Development Kit set up on
your machine. There are three phases. First we need to download the JDK, then
we need to move the downloaded files to where we want them to live, and
finally we need to tell the system where to find your new installation.

Before following these instructions, check to make sure you haven't already
installed Java by running `java -version`. If the output is something like the
following:

    java version "1.8.0_112"
    Java(TM) SE Runtime Environment (build 1.8.0_112-b16)
    Java HotSpot(TM) 64-Bit Server VM (build 25.112-b16, mixed mode)

then you're already good to go!

*********** Mac Instructions *********

To download the JDK, visit

http://www.oracle.com/technetwork/java/javase/downloads/index.html

Click on the JDK Download button, click on the radio button to accept the
license agreement, and download the Mac OS X x64 package. At the time of this
writing the most recent package was: jdk-8u51-macosx-x64.dmg

To tell OS X where to find java, we need to set a couple environment
variables. The easiest way to do this is to run the following at the terminal:

echo "# Java environment variables
export JAVA_HOME=$(/usr/libexec/java_home)
export JDK_HOME=$(/usr/libexec/java_home)
" >> ~/.bash_profile&&\
source ~/.bash_profile

Now you're done! You can now test your Java installation by running `java
-version`.

Awesome work! You can now complete your Gradle installation!

*********** Windows Instructions *********

To download the JDK, visit:

http://www.oracle.com/technetwork/java/javase/downloads/index.html

Click on the JDK Download button, click on the radio button to accept the
license agreement, and download the Windows x64 package. At the time this was
written, the most recent package was: jdk-8u51-windows-x64.exe

Run the installer, installing to the default location. At the time of this
writing that was: C:\Program Files\Java\jdk1.8.0_102\

To tell Windows where to find Java, we need to add an environment variable.
Navigate to the Control Panel > System > Advanced system settings > Advanced >
Environment Variables... > System variables > New...

The variable name should be : JAVA_HOME

The variable value should be your install location. At the time of this
writing it should be: C:\Program Files\Java\jdk1.8.0_102

You can now test your Java installation by running

    $ java -version

Awesome work! You can now complete your Gradle installation!
*/
